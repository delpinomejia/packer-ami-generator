stages:
  - validate
  - cost-estimate
  - build
  - verify
  - report

variables:
  PACKER_IMAGE: "hashicorp/packer:latest"
  AWS_CLI_IMAGE: "amazon/aws-cli:latest"
  PACKER_LOG: "1"
  PACKER_LOG_PATH: "packer-build.log"
  PACKER_CONFIG_FILE: "variables.pkrvars.hcl"
  PACKER_TEMPLATE: "packer.pkr.hcl"
  UBUNTU_VERSION: "24.04"
  AMI_NAME_PREFIX: "ubuntu-${UBUNTU_VERSION}-custom"

validate-configuration:
  stage: validate
  image: $PACKER_IMAGE
  tags:
    - homelab
    - local
  before_script:
    - echo "Setting up validation environment"
    - packer version
    - echo "AWS Region: $AWS_DEFAULT_REGION"
    - echo "Template: $PACKER_TEMPLATE"
    - echo "Variables: $PACKER_CONFIG_FILE"
  script:
    - echo "Validating Packer template syntax"
    - packer validate -var-file="$PACKER_CONFIG_FILE" "$PACKER_TEMPLATE"
    - echo "Template validation completed successfully"
  artifacts:
    reports:
      junit: validation-report.xml
    expire_in: 1 day

cost-estimation:
  stage: cost-estimate
  image: $AWS_CLI_IMAGE
  tags:
    - homelab
    - local
  before_script:
    - echo "Calculating estimated build costs"
  script:
    - echo "Instance Type: t3.small (~$0.0208/hour)"
    - echo "Estimated Build Time: 15-30 minutes"
    - echo "Estimated Instance Cost: $0.11 - $0.21"
    - echo "EBS Storage Cost: ~$0.01"
    - echo "Data Transfer Cost: Minimal"
    - echo "TOTAL ESTIMATED COST: $0.12 - $0.22"
    - echo "Actual costs may vary based on build duration and AWS pricing"
  artifacts:
    reports:
      junit: cost-estimate-report.xml
    expire_in: 1 day

build-ami:
  stage: build
  image: $PACKER_IMAGE
  tags:
    - homelab
    - local
  timeout: 45m
  before_script:
    - echo "Starting AMI build process"
    - echo "Build started at: $(date)"
    - echo "AWS Region: $AWS_DEFAULT_REGION"
  script:
    - echo "Executing Packer build with comprehensive logging"
    - packer build -var-file="$PACKER_CONFIG_FILE" "$PACKER_TEMPLATE" | tee "$PACKER_LOG_PATH"
    - echo "AMI build completed successfully"
    - echo "Extracting AMI details from build log"
    - AMI_ID=$(grep -oP 'ami-[a-z0-9]+' "$PACKER_LOG_PATH" | tail -1)
    - echo "Created AMI ID: $AMI_ID"
    - printf "AMI_ID=%s\n" "$AMI_ID" | tee ami-details.env
  artifacts:
    reports:
      dotenv: ami-details.env
    paths:
      - "$PACKER_LOG_PATH"
      - "ami-details.env"
    expire_in: 1 week
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: manual
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
  allow_failure: false

verify-ami:
  stage: verify
  image: $AWS_CLI_IMAGE
  tags:
    - homelab
    - local
  dependencies:
    - build-ami
  before_script:
    - echo "Verifying AMI creation and availability"
    - source ami-details.env
    - echo "Verifying AMI: $AMI_ID"
  script:
    - echo "Checking AMI status in AWS"
    - aws ec2 describe-images --image-ids $AMI_ID --region $AWS_DEFAULT_REGION
    - echo "AMI verification completed successfully"
    - aws ec2 describe-images --image-ids $AMI_ID --region $AWS_DEFAULT_REGION --query 'Images[0].{Name:Name,State:State,Architecture:Architecture}' --output table
  artifacts:
    reports:
      junit: ami-verification-report.xml
    expire_in: 1 week

generate-report:
  stage: report
  image: alpine:latest
  tags:
    - homelab
    - local
  dependencies:
    - build-ami
    - verify-ami
  before_script:
    - apk add --no-cache curl jq
    - source ami-details.env
  script:
    - echo "Generating comprehensive build report"
    - echo "Build completed successfully"
    - echo "AMI ID: $AMI_ID"
    - echo "Region: $AWS_DEFAULT_REGION"
    - echo "Build Date: $(date)"
    - echo "Creating detailed report file"
    - |
      cat > build-report.txt << EOF
      ===============================
      AWS AMI BUILD REPORT
      ===============================
      Build Date: $(date)
      AMI ID: $AMI_ID
      Region: $AWS_DEFAULT_REGION
      Ubuntu Version: $UBUNTU_VERSION
      AMI Name Prefix: $AMI_NAME_PREFIX
      Build Status: SUCCESS
      ===============================
      EOF
    - cat build-report.txt
  artifacts:
    reports:
      junit: build-report.xml
    paths:
      - "build-report.txt"
    expire_in: 1 month
