---
- hosts: localhost
  become: yes
  vars:
    php_version: "{{ php_version | default('8.3') }}"
    environment_name: "{{ environment | default('dev') }}"
    admin_email: "{{ email | default('admin@example.com') }}"
    postgresql_version: "15"

  tasks:
  - name: Update apt cache
    apt:
      update_cache: yes
      cache_valid_time: 3600

  - name: Add PHP repository
    apt_repository:
      repo: 'ppa:ondrej/php'
      state: present
    
  - name: Add PostgreSQL repository key
    apt_key:
      url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
      state: present

  - name: Add PostgreSQL repository
    apt_repository:
      repo: 'deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
      state: present

  - name: Install packages
    apt:
      name: "{{ packages }}"
      state: latest
      update_cache: yes
      force_apt_get: true
    vars:
      packages:
      # System utilities
      - curl
      - wget
      - htop
      - nmap
      - unzip
      - git
      - awscli
      
      # Web server
      - nginx
      
      # PHP and extensions
      - "php{{ php_version }}"
      - "php{{ php_version }}-cli"
      - "php{{ php_version }}-fpm"
      - "php{{ php_version }}-common"
      - "php{{ php_version }}-mysql"
      - "php{{ php_version }}-pgsql"
      - "php{{ php_version }}-curl"
      - "php{{ php_version }}-gd"
      - "php{{ php_version }}-mbstring"
      - "php{{ php_version }}-xml"
      - "php{{ php_version }}-zip"
      - "php{{ php_version }}-bcmath"
      - "php{{ php_version }}-soap"
      - "php{{ php_version }}-intl"
      - "php{{ php_version }}-readline"
      - "php{{ php_version }}-opcache"
      - "php{{ php_version }}-redis"
      - php-imagick
      - php-pear
      
      # Database clients
      - "postgresql-client-{{ postgresql_version }}"
      - redis-server
      
      # Image processing
      - imagemagick
      - libmagick++-dev
      - libpng-dev
      - ghostscript
      - pngquant
      - poppler-utils
      - wkhtmltopdf
      
      # Python
      - python3
      - python3-pip
      - python3-venv
      
      # Mail
      - mailutils
      - msmtp
      - msmtp-mta
      
      # Security
      - clamav-daemon
      - fail2ban
      
      # Other utilities
      - supervisor
      - s3fs
      - fop
      - golang-go
      - libsasl2-dev
      - ripmime
      - tnef
    tags:
    - php

  - name: Update PHP alternatives
    shell: |
      update-alternatives --set php /usr/bin/php{{ php_version }}
      update-alternatives --set phar /usr/bin/phar{{ php_version }}
      update-alternatives --set phar.phar /usr/bin/phar.phar{{ php_version }}
      update-alternatives --set phpize /usr/bin/phpize{{ php_version }}
      update-alternatives --set php-config /usr/bin/php-config{{ php_version }}

  - name: Create working directory
    file:
      path: /var/www/html
      state: directory
      owner: www-data
      group: www-data
      mode: '0775'

  - name: Create .ssh directory for www-data
    file:
      path: /var/www/.ssh
      state: directory
      owner: www-data
      group: www-data
      mode: '0700'

  - name: Create backup of nginx landing page
    copy:
      src: /var/www/html/index.nginx-debian.html
      dest: /etc/nginx/index.nginx-debian.html
      mode: '0644'
      owner: root
      group: root
    ignore_errors: yes

  - name: Set correct PHP version as default
    alternatives:
      name: php
      path: "/usr/bin/php{{ php_version }}"

  - name: Update PECL channel
    shell: pecl channel-update pecl.php.net
    ignore_errors: yes
    
  - name: Configure PHP settings
    shell: |
      # Basic PHP configuration
      sed -i 's/upload_max_filesize = .*/upload_max_filesize = 64M/' /etc/php/{{ php_version }}/fpm/php.ini
      sed -i 's/post_max_size = .*/post_max_size = 64M/' /etc/php/{{ php_version }}/fpm/php.ini
      sed -i 's/max_execution_time = .*/max_execution_time = 300/' /etc/php/{{ php_version }}/fpm/php.ini
      sed -i 's/memory_limit = .*/memory_limit = 256M/' /etc/php/{{ php_version }}/fpm/php.ini

  - name: Move old msmtp
    command: mv /usr/bin/msmtp /usr/bin/msmtp.bin 

  - name: Create new msmtp file
    file:
      path: /usr/bin/msmtp
      state: touch
      mode: u=rwxr,g=rwxr,o=rwxr
 
  - name: Configure new msmtp
    blockinfile: 
      path: /usr/bin/msmtp
      block: |
        #!/bin/bash
        sed -e 's/root .Cron Daemon./{{ EMAIL }}/' | /usr/bin/msmtp.bin "$@"

  - name: Change permissions to msmtp
    file:
      path: /usr/bin/msmtp
      owner: root
      group: root
      mode: '0755'
  
  - name: Change permissions to msmtp.bin
    file:
      path: /usr/bin/msmtp.bin
      owner: root
      group: root
      mode: '0755'

  - name: Create env file
    file:
      path: /usr/local/etc/env
      state: touch
      mode: u=rwxr,g=rwxr,o=rwxr

  - name: Configure MAILTO
    blockinfile: 
      path: /usr/local/etc/env
      block: |
        BOXNAME=API-Dev-UAT-us-east-1
        MAILER='MAILTO={{ EMAIL }}'
  
  - name: Create HOSTNAME env file
    file:
      path: /etc/profile.d/hostname.sh
      state: touch
      mode: u=rwxr,g=rwxr,o=rwxr

  - name: Configure HOSTNAME variable
    blockinfile: 
      path: /etc/profile.d/hostname.sh
      block: |
        export HOSTNAME=`hostname -f`

  - name: Configure ENV permissions
    file:
      path: /usr/local/etc/env
      owner: root
      group: root
      mode: '0777'

  # workaround as the ini file doesn't get created automatically
  - name: Create extension inotify
    copy:
      content: "extension=inotify.so"
      dest: /etc/php/7.3/mods-available/inotify.ini
      force: no

  - name: Enable php7 inotify oauth redis soap mongodb modules for fpm sapi
    shell: phpenmod -v 7.3 -s fpm gmagick inotify oauth redis soap mongodb app app-cli app-fpm

  - name: Enable php7 inotify oauth redis soap mongodb modules for cli sapi
    shell: phpenmod -v 7.3 -s cli gmagick inotify oauth redis soap mongodb app app-cli app-fpm

  - name: Restart PHP7-FPM
    shell: /etc/init.d/php7.3-fpm restart
    
  - name: Restart Nginx
    service:
      name: nginx
      state: restarted

  - name: Install Python module boto
    pip:
      name: boto
      executable: pip3

  - name: Copy shell login banner script into place
    copy:
      src: /tmp/40-list-aliases
      dest: /etc/update-motd.d/40-list-aliases
      mode: 0755
      owner: root
      group: root
